 Test Strategy
Introduction
A high-level summary of the project
Example
This strategy outlines what quality provides to the project, what type of testing is done, and how testing is carried out. The aim is to ensure quality in all phases of the development lifecycle to deliver a great experience for our users.
References
Relevant links and helpful information about the project and its tech stack Examples 
•	GitHub project: https://github.com/TestProject
•	Mocha and Chai are used: https://mochajs.org/ http://www.chaijs.com/ 
•	App built using Node.js: http://nodejs.org/
QA Deliverables
What artifacts QA will provide to the team Examples
•	Test plans for each feature
•	Issues reported for bugs, enhancements, usability suggestions
•	Release process document
Test Management
What resources are used to carry out testing in terms of tooling, environments, supported platforms and versions, and test data Examples 
•	Jenkins is used to build test versions of the application off of master and PRs
•	VMs are used to test the applications in Windows
•	Test runs are input in Testpad to make it clear what scenarios were tested and if those scenarios pass or fail

Programming Foundations: Software Testing/QA (Revision Q1 2019) with Meaghan Lewis	1 of 2
•	Supported operating systems are Windows 7 and 10 and Mac
•	Test data will include user accounts
Scope of Testing
What types of tests exist for this project
Examples
•	There are unit tests, 80% coverage, written in Mocha and Chai
•	Written during development—by developers
•	Integration tests are also written in Mocha and Chai
•	Automated UI tests for high-level workflows
